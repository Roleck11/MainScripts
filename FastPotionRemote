local Foods = {}
local Player = game:GetService("Players").LocalPlayer

local function getRandomPet(petTable)
    local petKeys = {}
    for key, _ in pairs(petTable) do
        table.insert(petKeys, key)
    end
    local randomKey = petKeys[math.random(1, #petKeys)]
    return petTable[randomKey]
end


for i,v in pairs(require(game.ReplicatedStorage.ClientModules.Core.ClientData).get_data()[game.Players.LocalPlayer.Name].inventory.food) do
    local Old = v.id
    if string.find(Old, v.id) and v.properties.name == pet_aging_potion then
        
        table.insert(Foods, v.unique)
    
    end
end

for i, v in pairs(debug.getupvalue(require(game:GetService("ReplicatedStorage").Fsys).load("RouterClient").init, 4)) do
    v.Name = i
end

local randomFood = getRandomPet(Foods)


local args = {
    [1] = randomFood
}

game:GetService("ReplicatedStorage"):WaitForChild("API"):WaitForChild("PetAPI/ConsumeFoodItem"):FireServer(unpack(args))
