PetName = NameOfPet

NumberOfAgingPotion = 1
for i, v in pairs(debug.getupvalue(require(game:GetService("ReplicatedStorage").Fsys).load("RouterClient").init, 4)) do
    v.Name = i
end
while true do
    local Pets = {}
    local Player = game:GetService("Players").LocalPlayer

    function RoT(t)
    return t[math.random(1, #t)]
    end

    for i,v in pairs(require(game.ReplicatedStorage.ClientModules.Core.ClientData).get_data()[game.Players.LocalPlayer.Name].inventory.pets) do
        if string.find(v.id, PetName) and v.properties.age < 6 then        
            table.insert(Pets, i)
        end
    end

    local randomPet = RoT(Pets)
    local args = {
        [1] = randomPet
    }
    game:GetService("ReplicatedStorage"):WaitForChild("API"):WaitForChild("ToolAPI/Equip"):InvokeServer(unpack(args))

    wait(0.3)
    -- Loop --
    for i = 1, NumberOfAgingPotion do
        wait(0.25)
        local Foods = {}
        for i,v in pairs(require(game.ReplicatedStorage.ClientModules.Core.ClientData).get_data()[game.Players.LocalPlayer.Name].inventory.food) do
            if v.id == "pet_age_potion" then        
                table.insert(Foods, i)
            end
        end

        local randomFood = RoT(Foods)
        local args = {
            [1] = randomFood
        }
        game:GetService("ReplicatedStorage"):WaitForChild("API"):WaitForChild("PetAPI/ConsumeFoodItem"):FireServer(unpack(args))
    end
    wait(0.5)
end
